#pragma checksum "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2fdc4611d49a56db2ae012c795dbebec2841ca9d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Tablas_TurnosDinamicos), @"mvc.1.0.view", @"/Views/Tablas/TurnosDinamicos.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Tablas/TurnosDinamicos.cshtml", typeof(AspNetCore.Views_Tablas_TurnosDinamicos))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\_ViewImports.cshtml"
using FactoryX;

#line default
#line hidden
#line 2 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\_ViewImports.cshtml"
using FactoryX.Models;

#line default
#line hidden
#line 4 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2fdc4611d49a56db2ae012c795dbebec2841ca9d", @"/Views/Tablas/TurnosDinamicos.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3801cde418586957cebeceffc6a060738280b80e", @"/Views/_ViewImports.cshtml")]
    public class Views_Tablas_TurnosDinamicos : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<FactoryX.Models.Turnos_activos_extras_view>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Calendar/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Calendar/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/TurnosDinamicos.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar-3.4.0/lib/cupertino/jquery-ui.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/js/fullcalendar-3.4.0/fullcalendar.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/fullcalendar-3.4.0/locale/es.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/fullcalendar-3.4.0/fullcalendar.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("modal fade"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ModalInsertaCalendario"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("role", new global::Microsoft.AspNetCore.Html.HtmlString("dialog"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(51, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
  
    ViewData["Title"] = "Turnos";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(142, 56, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2fdc4611d49a56db2ae012c795dbebec2841ca9d8110", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(198, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(200, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2fdc4611d49a56db2ae012c795dbebec2841ca9d9362", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(245, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(247, 47, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2fdc4611d49a56db2ae012c795dbebec2841ca9d10539", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(294, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(298, 88, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2fdc4611d49a56db2ae012c795dbebec2841ca9d11721", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(386, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(501, 125, true);
            WriteLiteral("<link href=\"//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css\" rel=\"stylesheet\" media=\"print\" />\r\n\r\n");
            EndContext();
            BeginContext(626, 99, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2fdc4611d49a56db2ae012c795dbebec2841ca9d13214", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
#line 16 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(725, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(727, 86, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2fdc4611d49a56db2ae012c795dbebec2841ca9d15262", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
#line 17 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(813, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(815, 89, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2fdc4611d49a56db2ae012c795dbebec2841ca9d17246", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
#line 18 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(904, 108, true);
            WriteLiteral("\r\n<link href=\'https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.css\' rel=\'stylesheet\' />\r\n\r\n\r\n");
            EndContext();
            BeginContext(1219, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1601, 343, true);
            WriteLiteral(@"
<h1>Configuración de turnos</h1>
<br />
<br />

<div class=""row"">
    <button type=""button"" class=""btn btn-info"" id=""btn_agregarMasivo1"" onclick=""abreFormularios(1)"">Agregar turno</button>
    &nbsp;&nbsp;
    <button type=""button"" class=""btn btn-danger"" id=""btn_eliminarMasivo1"" onclick=""abreFormularios(2)"">Eliminar turno</button>
");
            EndContext();
            BeginContext(2084, 90, true);
            WriteLiteral("\r\n</div>\r\n\r\n<br />\r\n\r\n<div id=\"tablaCalendar\" style=\"display:inline;\" class=\"col-md-12\">\r\n");
            EndContext();
            BeginContext(2216, 6, true);
            WriteLiteral("\r\n    ");
            EndContext();
            BeginContext(2224, 1687, false);
#line 52 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
Write(Html.DevExtreme().DataGrid<FactoryX.Models.Turnos_activos_extras_view3>().ID("dg_calendario")
            .DataSource(ds => ds.Mvc()
            .LoadParams(new { idEmpresa = ViewBag.idEmpresa })
            .Controller("Tablas")
            .LoadAction("GetCalendario")
            .Key("id")


        ).Columns(col => {

            //col.Add().Caption("SeleccionarT")
            //.Type(GridCommandColumnType.Selection)
            //.Width(40);

            //col.AddFor(m => m.Fecha_ini).Width(150).SortOrder(SortOrder.Desc).FilterValue( DateTime.Now); ;

            //col.AddFor(m => m.Fecha_fin).Width(150);

            col.AddFor(m => m.Mes).FilterValue(DateTime.Now.Month).Width(100);

            col.AddFor(m => m.Ano).Caption("Año").FilterValue(DateTime.Now.Year).Width(100);

            col.AddFor(m => m.Fecha_ini).Caption("Fecha").Format("dd/MM/yyyy").SortOrder(SortOrder.Desc).GroupIndex(0).AutoExpandGroup(false)
            .EditorOptions(new
            {
                dateSerializationFormat = "yyyy-MM-ddTHH:mm:ss"
            }); ;

            col.AddFor(m => m.Cod_activo).Caption("Código Activo");

            col.AddFor(m => m.Des_activo).Caption("Nombre Activo");

            col.AddFor(m => m.Cod_turno).Caption("Código Turno");

            //col.AddFor(m => m.Hora_fin1);
        })
        .Paging(paging => paging.PageSize(20))

        .AllowColumnResizing(true)
        .AllowColumnReordering(true)
        .FilterRow(filterRow => filterRow.Visible(true))
        .GroupPanel(groupPanel => groupPanel.Visible(true))
        .ShowBorders(true)

     //.OnSelectionChanged("selection_changedT")
     );

#line default
#line hidden
            EndContext();
            BeginContext(3912, 181, true);
            WriteLiteral("\r\n</div>\r\n\r\n<br />\r\n<hr />\r\n<br />\r\n\r\n<div id=\"ModalDetalle\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4093, "\"", 4101, 0);
            EndWriteAttribute();
            BeginContext(4102, 537, true);
            WriteLiteral(@" style=""margin-left:10px;"">

                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                <h4 class=""modal-title "" style=""display: block;"">Borrar horario de activos</h4> <br />
                <h4 class=""modal-title""><span id=""eventTitle""></span></h4>
                <hr />
            </div>
            <div class=""modal-body"">
                <p id=""pDetails""></p>

                <div class=""row form-group"" id=""borrarDetalles"" style=""display:none;"">
                    <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4639, "\"", 4647, 0);
            EndWriteAttribute();
            BeginContext(4648, 55, true);
            WriteLiteral(">\r\n                        <hr class=\"col-md-12\" />\r\n\r\n");
            EndContext();
            BeginContext(4757, 148, true);
            WriteLiteral("                        <div class=\"dx-field-label\">Fecha inicio:</div>\r\n                        <div class=\"row\">\r\n                            <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4905, "\"", 4913, 0);
            EndWriteAttribute();
            BeginContext(4914, 35, true);
            WriteLiteral(">\r\n                                ");
            EndContext();
            BeginContext(4951, 302, false);
#line 125 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                            Write(Html.DevExtreme().DateBox()
                                    .Type(DateBoxType.Date)
                                    .ID("fechaIniB")
                                    .DisplayFormat("dd/MM/yyyy")
                                    .UseMaskBehavior(true)
                                );

#line default
#line hidden
            EndContext();
            BeginContext(5254, 72, true);
            WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n\r\n");
            EndContext();
            BeginContext(5380, 145, true);
            WriteLiteral("                        <div class=\"dx-field-label\">Fecha fin:</div>\r\n                        <div class=\"row\">\r\n                            <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 5525, "\"", 5533, 0);
            EndWriteAttribute();
            BeginContext(5534, 35, true);
            WriteLiteral(">\r\n                                ");
            EndContext();
            BeginContext(5571, 302, false);
#line 138 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                            Write(Html.DevExtreme().DateBox()
                                    .Type(DateBoxType.Date)
                                    .ID("fechaFinB")
                                    .DisplayFormat("dd/MM/yyyy")
                                    .UseMaskBehavior(true)
                                );

#line default
#line hidden
            EndContext();
            BeginContext(5874, 2141, true);
            WriteLiteral(@"
                            </div>
                        </div>
                    </div>
                    <br />

                    <div>

                        <label class=""col-md-12 control-label"" style=""font-weight:700; color:dimgray;"">Seleccione los días:</label>

                        <div class=""row"">
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <input type=""checkbox"" name=""Lunes"" value=""2"" id=""chLu_""> &nbsp;&nbsp;
                            <label for=""Lunes""> Lunes </label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                            <input type=""checkbox"" name=""Martes"" value=""3"" id=""chMa_""> &nbsp;&nbsp;
                            <label for=""Martes""> Martes</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                            <input type=""checkbox"" name=""Miercoles"" value=""4"" id=""chMi_""> &nbsp;&nbsp;
                            <label for=""Miercoles""> Miercoles</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                   ");
            WriteLiteral(@"         <input type=""checkbox"" name=""Jueves"" value=""5"" id=""chJu_""> &nbsp;&nbsp;
                            <label for=""Jueves""> Jueves</label><br> &nbsp;&nbsp;&nbsp;&nbsp;
                        </div>
                        <div class=""row"">
                            <div class=""row"">
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type=""checkbox"" name=""Viernes"" value=""6"" id=""chVi_""> &nbsp;&nbsp;
                                <label for=""Viernes""> Viernes</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Sabado"" value=""7"" id=""chSa_""> &nbsp;&nbsp;
                                <label for=""Sabado""> Sabado</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Domingo"" value=""1"" id=""chDo_""> &nbsp;&nbsp;
                                <label for=""Domingo""> Domingo</label><br> &nbsp;&nbsp;&nbsp;&nbsp;
       ");
            WriteLiteral("                     </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n");
            EndContext();
            BeginContext(8062, 277, true);
            WriteLiteral(@"
                    <hr class=""col-md-12"" />

                    <div class=""col-md-12"" style=""color:red;"">

                        <label class=""col-md-12 control-label"" style=""font-weight:700; color:dimgray;"">Seleccione los turnos:</label>

                        ");
            EndContext();
            BeginContext(8341, 1266, false);
#line 191 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                    Write(Html.DevExtreme().DataGrid<FactoryX.Models.Turnos>().ID("dg_Turnos2BT")
                                .DataSource(ds => ds.Mvc()
                                .LoadParams(new { idEmpresa = ViewBag.idEmpresa })
                                .Controller("Tablas")
                                .LoadAction("GetTurnos")
                                .Key("Cod_turno")

                            ).Columns(col => {

                                col.Add().Caption("SeleccionarBT")
                                .Type(GridCommandColumnType.Selection)
                                .Width(40);

                                col.AddFor(m => m.Cod_turno);
                                //col.AddFor(m => m.Hora_fin1);
                            })
                            .Paging(paging => paging.PageSize(5))

                            .Selection(s => s.Mode(SelectionMode.Multiple))
                            .AllowColumnResizing(true)
                            .AllowColumnReordering(true)
                            .FilterRow(filterRow => filterRow.Visible(true))
                            .ShowBorders(true)
                            .OnSelectionChanged("selection_changedBT")
                            );

#line default
#line hidden
            EndContext();
            BeginContext(9608, 62, true);
            WriteLiteral("\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n");
            EndContext();
            BeginContext(9718, 257, true);
            WriteLiteral(@"
                    <hr class=""col-md-12"" />

                    <div class=""col-md-12"">
                        <label class=""col-md-12 control-label"" style=""font-weight:700; color:dimgray;"">Seleccione los activos:</label>

                        ");
            EndContext();
            BeginContext(9977, 1320, false);
#line 227 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                    Write(Html.DevExtreme().DataGrid<FactoryX.Models.ActivosLista>().ID("dg_Activos2L")
                                .DataSource(ds => ds.Mvc()
                                .LoadParams(new { idEmpresa = ViewBag.idEmpresa })
                                .Controller("Tablas")
                                .LoadAction("GetActivos")
                                .Key("Cod_activo")

                            ).Columns(col => {

                                col.Add().Caption("SeleccionarBT")
                                .Type(GridCommandColumnType.Selection)
                                .Width(40);

                                col.AddFor(m => m.Cod_activo).Caption("Código").Width(150);
                                col.AddFor(m => m.Des_activo).Caption("Nombre");
                            })
                            .Paging(paging => paging.PageSize(5))

                            .Selection(s => s.Mode(SelectionMode.Multiple))
                            .AllowColumnResizing(true)
                            .AllowColumnReordering(true)
                            .FilterRow(filterRow => filterRow.Visible(true))
                            .ShowBorders(true)
                            .OnSelectionChanged("selection_changedB")
                            );

#line default
#line hidden
            EndContext();
            BeginContext(11298, 824, true);
            WriteLiteral(@"
                    </div>

                    <br />
                    
                    <button type=""button"" class=""btn btn-outline-danger"" id=""btn_borraActividadLote"" style=""width:100%;"">Borrar registros</button>

                </div>



            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-warning"" id=""btn_borraActividadLL"" onclick=""borraLote()"">Mostrar eventos por lote</button>

                <div id=""borraUno"">
                    <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" id=""btn_borraActividad"">Borrar evento</button>
                </div>

                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            BeginContext(12173, 24, true);
            WriteLiteral("<div class=\"scroller\">\r\n");
            EndContext();
            BeginContext(12270, 4, true);
            WriteLiteral("    ");
            EndContext();
            BeginContext(12274, 9314, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2fdc4611d49a56db2ae012c795dbebec2841ca9d33330", async() => {
                BeginContext(12341, 803, true);
                WriteLiteral(@"
        <div class=""modal-dialog "">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h4 class=""modal-title "" style=""display: block;"">Ingreso de horario de activo</h4> <br />
                    <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                </div>

                <div class=""modal-body"" style=""display: block;"">
                    <h6 class=""modal-title "" id=""titulo"" style=""display: block;""></h6>
                    <br />

                    <div class=""row form-group"">
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <div class=""dx-field-label"">Fecha inicio:</div>
                        <div class=""row dx-field-value"">
                            <div");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 13144, "\"", 13152, 0);
                EndWriteAttribute();
                BeginContext(13153, 35, true);
                WriteLiteral(">\r\n                                ");
                EndContext();
                BeginContext(13190, 301, false);
#line 296 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                            Write(Html.DevExtreme().DateBox()
                                    .Type(DateBoxType.Date)
                                    .ID("fechaIni")
                                    .DisplayFormat("dd/MM/yyyy")
                                    .UseMaskBehavior(true)
                                );

#line default
#line hidden
                EndContext();
                BeginContext(13492, 282, true);
                WriteLiteral(@"
                            </div>
                        </div>

                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <div class=""dx-field-label"">Fecha fin:</div>
                        <div class=""row dx-field-value"">
                            <div");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 13774, "\"", 13782, 0);
                EndWriteAttribute();
                BeginContext(13783, 35, true);
                WriteLiteral(">\r\n                                ");
                EndContext();
                BeginContext(13820, 301, false);
#line 309 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                            Write(Html.DevExtreme().DateBox()
                                    .Type(DateBoxType.Date)
                                    .ID("fechaFin")
                                    .DisplayFormat("dd/MM/yyyy")
                                    .UseMaskBehavior(true)
                                );

#line default
#line hidden
                EndContext();
                BeginContext(14122, 251, true);
                WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n\r\n                        <br /><br /><br />\r\n\r\n                        <label class=\"col-md-12 control-label\" style=\"font-weight:700; color:dimgray;\">Seleccione los días:</label>\r\n");
                EndContext();
                BeginContext(14611, 1856, true);
                WriteLiteral(@"
                        <br />

                        <div>
                            <div class=""row"">
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type=""checkbox"" name=""Lunes"" value=""2"" id=""chLu""> &nbsp;&nbsp;
                                <label for=""Lunes""> Lunes </label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Martes"" value=""3"" id=""chMa""> &nbsp;&nbsp;
                                <label for=""Martes""> Martes</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Miercoles"" value=""4"" id=""chMi""> &nbsp;&nbsp;
                                <label for=""Miercoles""> Miercoles</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Jueves"" value=""5"" id=""chJu""> &nbsp;&nbsp;
                                <label for=""Jueves""> Jueves</label><br> &nbsp;&nbsp;&nbsp;&nbsp;
             ");
                WriteLiteral(@"               </div>
                            <div class=""row"">
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type=""checkbox"" name=""Viernes"" value=""6"" id=""chVi""> &nbsp;&nbsp;
                                <label for=""Viernes""> Viernes</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Sabado"" value=""7"" id=""chSa""> &nbsp;&nbsp;
                                <label for=""Sabado""> Sabado</label><br> &nbsp;&nbsp;&nbsp;&nbsp;

                                <input type=""checkbox"" name=""Domingo"" value=""1"" id=""chDo""> &nbsp;&nbsp;
                                <label for=""Domingo""> Domingo</label><br> &nbsp;&nbsp;&nbsp;&nbsp;
                            </div>
                        </div>

");
                EndContext();
                BeginContext(16518, 256, true);
                WriteLiteral(@"
                        <hr class=""col-md-12"" />

                        <div>

                            <label class=""col-md-12 control-label"" style=""font-weight:700; color:dimgray;"">Seleccione los turnos:</label>

                            ");
                EndContext();
                BeginContext(16776, 1343, false);
#line 363 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                        Write(Html.DevExtreme().DataGrid<FactoryX.Models.Turnos>().ID("dg_Turnos2")
                                .DataSource(ds => ds.Mvc()
                                .LoadParams(new { idEmpresa = ViewBag.idEmpresa })
                                .Controller("Tablas")
                                .LoadAction("GetTurnos")
                                .Key("Cod_turno")

                            ).Columns(col => {

                                col.Add().Caption("SeleccionarT")
                                .Type(GridCommandColumnType.Selection)
                                .Width(40);

                                col.AddFor(m => m.Cod_turno).Caption("Código");
                                //col.AddFor(m => m.Hora_fin1);
                            })
                            .Paging(paging => paging.PageSize(5))

                            .Selection(s => s.Mode(SelectionMode.Multiple))
                            .AllowColumnResizing(true)
                            .AllowColumnReordering(true)
                            .FilterRow(filterRow => filterRow.Visible(true))
                            .ShowBorders(true)
                            .OnSelectionChanged("selection_changedT")
                            //.OnContentReady("cargaInicial")
                            );

#line default
#line hidden
                EndContext();
                BeginContext(18120, 70, true);
                WriteLiteral("\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n");
                EndContext();
                BeginContext(18242, 255, true);
                WriteLiteral("\r\n                        <hr class=\"col-md-12\" />\r\n\r\n                        <div>\r\n                            <label class=\"col-md-12 control-label\" style=\"font-weight:700; color:dimgray;\">Seleccione los activos:</label>\r\n\r\n                            ");
                EndContext();
                BeginContext(18499, 1305, false);
#line 400 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                        Write(Html.DevExtreme().DataGrid<FactoryX.Models.ActivosLista>().ID("dg_Activos2")
                                .DataSource(ds => ds.Mvc()
                                .LoadParams(new { idEmpresa = ViewBag.idEmpresa })
                                .Controller("Tablas")
                                .LoadAction("GetActivos")
                                .Key("Cod_activo")

                            ).Columns(col => {

                                col.Add().Caption("Seleccionar")
                                .Type(GridCommandColumnType.Selection)
                                .Width(40);

                                col.AddFor(m => m.Cod_activo).Caption("Código");
                                col.AddFor(m => m.Des_activo).Caption("Nombre");
                            })
                            .Paging(paging => paging.PageSize(5))

                            .Selection(s => s.Mode(SelectionMode.Multiple))
                            .AllowColumnResizing(true)
                            .AllowColumnReordering(true)
                            .FilterRow(filterRow => filterRow.Visible(true))
                            .ShowBorders(true)
                            .OnSelectionChanged("selection_changed")
                            );

#line default
#line hidden
                EndContext();
                BeginContext(19805, 1224, true);
                WriteLiteral(@"
                        </div>

                    </div>
                    <div>
                        <button type=""button"" class=""btn btn-outline-success"" id=""btn_guardaActividad"" style=""width:100%;"">Guardar registro</button>

                        <div id=""clac1"" style=""display:none; color:forestgreen;"">
                            <div class=""spinner-border text-secondary"" role=""status"">
                                <span class=""sr-only"" style=""color:forestgreen"">Calculando valores...</span>
                            </div>
                            <a>&nbsp; Procesando registros, por favor espere...</a>
                            <br />
                        </div>
                    </div>

                    <input type=""text"" id=""Lab_activo"" style=""display:none;"" />
                    <input type=""text"" id=""Lab_variable"" style=""display:none;"" />
                    <input type=""text"" id=""Lab_id"" style=""display:none;"" />
                    <input type=""text"" id");
                WriteLiteral("=\"Lab_tabla\" style=\"display:none;\" />\r\n                    <input type=\"text\" id=\"Lab_idIncidencia\" style=\"display:none;\" />\r\n                </div>\r\n\r\n                <div class=\"modal-footer sin\">\r\n");
                EndContext();
                BeginContext(21367, 214, true);
                WriteLiteral("                    <button type=\"button\" class=\"btn btn-outline-danger\" data-dismiss=\"modal\"><i class=\"fas fa-door-open\"></i> Cancelar</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21588, 152, true);
            WriteLiteral("\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    var FactoryX = FactoryX || {};\r\n    FactoryX.Urls = FactoryX.Urls || {};\r\n    FactoryX.Urls.baseUrl = \'");
            EndContext();
            BeginContext(21741, 16, false);
#line 462 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                        Write(Url.Content("~"));

#line default
#line hidden
            EndContext();
            BeginContext(21757, 48, true);
            WriteLiteral("\';\r\n\r\n    FactoryX.Urls.AsignaEmpresa        = \'");
            EndContext();
            BeginContext(21806, 85, false);
#line 464 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                                     Write(Html.Raw(Url.Action("AsignaEmpresa","Tablas", new { @idEmpresa = ViewBag.idEmpresa})));

#line default
#line hidden
            EndContext();
            BeginContext(21891, 46, true);
            WriteLiteral("\';\r\n    FactoryX.Urls.RegCalendario        = \'");
            EndContext();
            BeginContext(21938, 85, false);
#line 465 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                                     Write(Html.Raw(Url.Action("RegCalendario","Tablas", new { @idEmpresa = ViewBag.idEmpresa})));

#line default
#line hidden
            EndContext();
            BeginContext(22023, 46, true);
            WriteLiteral("\';\r\n    FactoryX.Urls.InsertCalendario     = \'");
            EndContext();
            BeginContext(22070, 89, false);
#line 466 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                                     Write(Html.Raw(Url.Action("InsertCalendario", "Tablas", new { @idEmpresa = ViewBag.idEmpresa})));

#line default
#line hidden
            EndContext();
            BeginContext(22159, 46, true);
            WriteLiteral("\';\r\n    FactoryX.Urls.DeleteCalendario     = \'");
            EndContext();
            BeginContext(22206, 89, false);
#line 467 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                                     Write(Html.Raw(Url.Action("DeleteCalendario", "Tablas", new { @idEmpresa = ViewBag.idEmpresa})));

#line default
#line hidden
            EndContext();
            BeginContext(22295, 46, true);
            WriteLiteral("\';\r\n    FactoryX.Urls.DeleteCalendarioLote = \'");
            EndContext();
            BeginContext(22342, 93, false);
#line 468 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                                     Write(Html.Raw(Url.Action("DeleteCalendarioLote", "Tablas", new { @idEmpresa = ViewBag.idEmpresa})));

#line default
#line hidden
            EndContext();
            BeginContext(22435, 46, true);
            WriteLiteral("\';\r\n    FactoryX.Urls.ValidaTurnos         = \'");
            EndContext();
            BeginContext(22482, 85, false);
#line 469 "C:\Users\MyHP\source\repos\factoryx\FactoryX\Views\Tablas\TurnosDinamicos.cshtml"
                                     Write(Html.Raw(Url.Action("ValidaTurnos", "Tablas", new { @idEmpresa = ViewBag.idEmpresa})));

#line default
#line hidden
            EndContext();
            BeginContext(22567, 17908, true);
            WriteLiteral(@"';

</script>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        let turnosX = [];

        inicial();

        function inicial() {
            var events = [];

            //$("".alert-dismissible"").fadeTo(6000, 5000).slideUp(5000, function () {
            //    $("".alert-dismissible"").alert('close');
            //});

            $.ajax({
                type: ""GET"",
                url: FactoryX.Urls.RegCalendario,
                data: {}
            }).done(function (data) {

                console.log('Inicial');

                $.each(data, function (i, v) {
                    events.push({
                        id: v.id,
                        title: v.Cod_activo,
                        description: """",
                        start: v.Fecha_ini,
                        end: v.Fecha_fin
                    });
                })

                var div = documen");
            WriteLiteral(@"t.getElementById('calendar');

                while (div.firstChild) {
                    div.removeChild(div.firstChild);
                }

                //div.setAttribute(""data-language"", ""es"");

                div.classList.add(""col-md-12"");

                GenerateCalendar(events);

            }).fail(function (data) {
                alert('hubo un error interno al mostrar los registros');
            });
        }

        function GenerateCalendar(events) {
            $('#calendar').fullCalendar('destroy');
            $('#calendar').fullCalendar({

                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                //initialDate: '2020-09-01',
                defaultDate: new Date(),
                locale: 'es',
                themeSystem: 'bootstrap3',
                navLinks: true, // can click day/week names t");
            WriteLiteral(@"o navigate views
                selectable: true,
                selectMirror: true,
                select: function (arg) {
                    $('#chLu').each(function () { this.checked = false; });
                    $('#chMa').each(function () { this.checked = false; });
                    $('#chMi').each(function () { this.checked = false; });
                    $('#chJu').each(function () { this.checked = false; });
                    $('#chVi').each(function () { this.checked = false; });
                    $('#chSa').each(function () { this.checked = false; });
                    $('#chDo').each(function () { this.checked = false; });

                    var dd = moment(arg.date('yyyy/MM/dd')).format('YYYY/MM/DD'); //moment(arg.date('MM/dd/yyyy')).format('MM/DD/yyyy');
                    //alert(dd);

                    $('#fechaIni').dxDateBox('instance').option({ value: dd });
                    $('#fechaFin').dxDateBox('instance').option({ value: dd });

             ");
            WriteLiteral(@"       $('#ModalInsertaCalendario').modal();

                },
                eventClick: function (calEvent, jsEvent, view) {

                    $('#chLu_').each(function () { this.checked = false; });
                    $('#chMa_').each(function () { this.checked = false; });
                    $('#chMi_').each(function () { this.checked = false; });
                    $('#chJu_').each(function () { this.checked = false; });
                    $('#chVi_').each(function () { this.checked = false; });
                    $('#chSa_').each(function () { this.checked = false; });
                    $('#chDo_').each(function () { this.checked = false; });

                    var dd = moment(calEvent.start.date('yyyy/MM/dd')).format('YYYY/MM/DD');

                    //alert('Prueba ################ 0123456789');

                    $('#fechaIniB').dxDateBox('instance').option({ value: dd });
                    $('#fechaFinB').dxDateBox('instance').option({ value: dd });

        ");
            WriteLiteral(@"            $('#ModalDetalle #eventTitle').text(calEvent.title);
                    var $description = $('<div/>');
                    iddd = calEvent.id;
                    $description.append($('<p/>').html('<b id=""idxx"">Id:' + calEvent.id + '</b>'));
                    $description.append($('<p/>').html('<b>Inicio:</b>' + calEvent.start.format(""DD-MMM-YYYY HH:mm a"")));
                    if (calEvent.end != null) {
                        $description.append($('<p/>').html('<b>Fin:</b>' + calEvent.end.format(""DD-MMM-YYYY HH:mm a"")));
                    }
                    $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                    $('#ModalDetalle #pDetails').empty().html($description);

                    $('#btn_borraActividadLL').text('Mostrar eventos por lote');
                    $('#borrarDetalles').hide();
                    $('#borraUno').show();

                    $('#ModalDetalle').modal();

                },
             ");
            WriteLiteral(@"   //dateClick: function (info) {
                //    alert('Clicked on: ' + info.dateStr);
                //    //alert('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);
                //    //alert('Current view: ' + info.view.type);
                //    // change the day's background color just for fun
                //    //info.dayEl.style.backgroundColor = 'red';
                //},
                editable: true,
                //dayMaxEvents: true, //allow ""more"" link when too many events
                //eventColor: '#378006',
                eventLimit: true,
                eventColor: '#AAD9E7',
                events: events

            })

            $('#calendar').fullCalendar({
                themeSystem: 'bootstrap',
                locale: 'es'
            });
        }

        $('#btn_guardaActividad').click(function () {
                        
            var Lunes = document.getElementById('chLu').checked;
            var Martes = do");
            WriteLiteral(@"cument.getElementById('chMa').checked;
            var Miercoles = document.getElementById('chMi').checked;
            var Jueves = document.getElementById('chJu').checked;
            var Viernes = document.getElementById('chVi').checked;
            var Sabado = document.getElementById('chSa').checked;
            var Domingo = document.getElementById('chDo').checked;

            if (arregloTurnos().length === 0) {
                Swal.fire({
                    title: ""Debe escoger un turno"",
                    text: ""Por favor seleccione un turno de la lista."",
                    icon: ""info"",
                    confirmButtonText: 'Cerrar'
                });
            } else if (Lunes === false && Martes === false && Miercoles === false &&
                Jueves === false && Viernes === false && Sabado === false && Domingo === false) {

                Swal.fire({
                    title: ""Seleccione un día"",
                    text: ""Debe escoger al menos un día para guardar");
            WriteLiteral(@" el registro"",
                    icon: ""info"",
                    confirmButtonText: 'Cerrar'
                });
            } else if (arregloActivos().length === 0) {
                Swal.fire({
                    title: ""Seleccione un activo"",
                    text: ""Debe escoger al menos un activo para guardar el registro"",
                    icon: ""info"",
                    confirmButtonText: 'Cerrar'
                });
            } else {

                var fecha1 = new Date($('#fechaIni').dxDateBox(""option"", ""value""));
                var fecha2 = new Date($('#fechaFin').dxDateBox(""option"", ""value""));

                var f1 = moment(fecha1, 'YYYY-MM-DD'); //$('#fechaIni').dxDateBox(""option"", ""value"");
                var f2 = moment(fecha2, 'YYYY-MM-DD');  //$('#fechaFin').dxDateBox(""option"", ""value"");

                var diferenciaDias = f2.diff(f1, 'days');

                var fechaDia = f1;

                let listaActivos = [];
                listaActivos ");
            WriteLiteral(@"= arregloActivos();

                let listaTurnos = [];
                listaTurnos = arregloTurnos();

                let diasInv = [];

                //alert();

                for (var i = 1; i <= diferenciaDias + 1; i++) {

                    //alert(fechaDia);

                    for (var j = 0; j < listaActivos.length; j++) {

                        var cod_activo = listaActivos[j].Cod_activo;

                        for (var k = 0; k < listaTurnos.length; k++) {
                            var cod_turno = listaTurnos[k].Cod_turno;

                            //console.log(listaTurnos[k].Cod_Turno);
                            var dia = new Date(fechaDia).getDay();

                            //alert(dia + ' - ' + fechaDia);

                            //console.log(dia);
                            if ((Lunes === true && dia === 1) ||
                                (Martes === true && dia === 2) ||
                                (Miercoles === true && dia ===");
            WriteLiteral(@" 3) ||
                                (Jueves === true && dia === 4) ||
                                (Viernes === true && dia === 5) ||
                                (Sabado === true && dia === 6) ||
                                (Domingo === true && dia == 0)) {

                                //alert(fechaDia);
                                diasInv.push({ ""fecha"": moment(fechaDia, 'YYYY-MM-DD'), ""cod_activo"": cod_activo, ""cod_turno"": cod_turno });
                            }


                        }
                    }

                    fechaDia = moment(fechaDia.add(1, 'days'), 'YYYY-MM-DD');
                }

                if (diasInv.length === 0) {
                    Swal.fire({
                        title: ""No hay coincidencia de los datos"",
                        text: ""No existen los días de la semana seleccionados entre las fechas escogidas"",
                        icon: ""error"",
                        confirmButtonText: 'Cerrar'
                 ");
            WriteLiteral(@"   });
                } else {
                    insertaRegistro(diasInv);
                }

                //console.log(diasInv);
                //alert(""Se guardara la información con los datos seleccionados...**"");
                inicial();
                //$('#ModalInsertaCalendario').modal('toggle');
                //alert(""Recargado"");
            }
        });

        $('#btn_borraActividad').click(function () {

            var idx = $('#idxx').html().substring(3, $('#idxx').html().length)
            //console.log(idx);
            activaDiv('act');

            Swal.fire({
                title: 'Confirme su solicitud',
                html: 'Desea borrar este registro?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: ""Cancelar"",
                confirmButtonText: 'Continuar'
            }).then((result) => {
   ");
            WriteLiteral(@"             if (result.value) {

                    $.ajax({
                        type: ""GET"",
                        url: FactoryX.Urls.DeleteCalendario,
                        data: { idx }
                    }).done(function (data) {
                        inicial();
                        $('#dg_calendario').dxDataGrid(""instance"").refresh();
                        $('#ModalDetalle').modal('hide');
                        $('#dg_calendario').dxDataGrid(""instance"").refresh();
                        activaDiv('des');
                    }).fail(function (data) {
                        inicial();
                        $('#ModalDetalle').modal('hide');
                        activaDiv('des');
                    });

                } else {
                    activaDiv('des');
                }
            });

        })

        $('#btn_borraActividadLote').click(function () {

            var Lunes = document.getElementById('chLu_').checked;
            var Mart");
            WriteLiteral(@"es = document.getElementById('chMa_').checked;
            var Miercoles = document.getElementById('chMi_').checked;
            var Jueves = document.getElementById('chJu_').checked;
            var Viernes = document.getElementById('chVi_').checked;
            var Sabado = document.getElementById('chSa_').checked;
            var Domingo = document.getElementById('chDo_').checked;

            if (arregloTurnosBT().length === 0) {
                Swal.fire({
                    title: ""Debe escoger un turno"",
                    text: ""Por favor seleccione un turno de la lista."",
                    icon: ""info"",
                    confirmButtonText: 'Cerrar'
                });
            } else if (Lunes === false && Martes === false && Miercoles === false &&
                Jueves === false && Viernes === false && Sabado === false && Domingo === false) {

                Swal.fire({
                    title: ""Seleccione un día"",
                    text: ""Debe escoger al menos un d");
            WriteLiteral(@"ía para guardar el registro"",
                    icon: ""info"",
                    confirmButtonText: 'Cerrar'
                });
            } else if (arregloActivosB().length === 0) {
                Swal.fire({
                    title: ""Seleccione un activo"",
                    text: ""Debe escoger al menos un activo para guardar el registro"",
                    icon: ""info"",
                    confirmButtonText: 'Cerrar'
                });
            } else {

                var fecha1 = new Date($('#fechaIniB').dxDateBox(""option"", ""value""));
                var fecha2 = new Date($('#fechaFinB').dxDateBox(""option"", ""value""));

                var f1 = moment(fecha1, 'YYYY-MM-DD'); //$('#fechaIni').dxDateBox(""option"", ""value"");
                var f2 = moment(fecha2, 'YYYY-MM-DD');  //$('#fechaFin').dxDateBox(""option"", ""value"");

                var diferenciaDias = f2.diff(f1, 'days');

                var fechaDia = f1;

                let listaActivos = [];
           ");
            WriteLiteral(@"     listaActivos = arregloActivosB();

                let listaTurnos = [];
                listaTurnos = arregloTurnosBT();

                let diasInv = [];

                for (var i = 1; i <= diferenciaDias + 1; i++) {

                    //alert(fechaDia);
                    //alert('Entra aquí');

                    for (var j = 0; j < listaActivos.length; j++) {

                        var cod_activo = listaActivos[j].Cod_activo;

                        for (var k = 0; k < listaTurnos.length; k++) {
                            var cod_turno = listaTurnos[k].Cod_turno;

                            //console.log(listaTurnos[k].Cod_Turno);
                            var dia = new Date(fechaDia).getDay();

                            //console.log(dia);

                            if ((Lunes === true && dia === 1) ||
                                (Martes === true && dia === 2) ||
                                (Miercoles === true && dia === 3) ||
                   ");
            WriteLiteral(@"             (Jueves === true && dia === 4) ||
                                (Viernes === true && dia === 5) ||
                                (Sabado === true && dia === 6) ||
                                (Domingo === true && dia == 0)) {

                                //alert(moment(fechaDia, 'YYYY-MM-DD'));

                                diasInv.push({ ""fecha"": moment(fechaDia, 'YYYY-MM-DD'), ""cod_activo"": cod_activo, ""cod_turno"": cod_turno });
                            }


                        }
                    }

                    fechaDia = moment(fechaDia.add(1, 'days'), 'YYYY-MM-DD');
                }

                if (diasInv.length === 0) {
                    Swal.fire({
                        title: ""No hay coincidencia de los datos"",
                        text: ""No existen los días de la semana seleccionados entre las fechas escogidas"",
                        icon: ""error"",
                        confirmButtonText: 'Cerrar'
                    ");
            WriteLiteral(@"});
                } else {
                    eliminaRegistrosLote(diasInv);
                }

                //console.log(diasInv);
                //alert(""Se borraran la información con los datos seleccionados..."");
                $('#dg_calendario').dxDataGrid(""instance"").refresh();
                inicial();
                $('#ModalDetalle').modal('toggle');
                $('#dg_calendario').dxDataGrid(""instance"").refresh();
            }
        });

        $('#btn_volverCal').click(function () {
            inicial();            
        });

    });



    //console.log(datos());

</script>

<div id=""calendar0"" class=""col-12"" >

    <div id=""div_bloqueo"" class=""externo"">
        <div class=""blocker"">
            <div class=""spinner-border text-secondary"" role=""status"">
                <span class=""sr-only"" style=""color:forestgreen"">Calculando valores...</span>&nbsp;
            </div>
            <a style=""background-color: grey;"">&nbsp; Procesando registros");
            WriteLiteral(@", por favor espere. <br />&nbsp; Este proceso pruede tardar unos minutos dependiendo de la cantidad de registros procesados. <br />&nbsp; No actualice la página mientras transcurre el proceso.</a>
            <br />
        </div>
    </div>

    <h4>Visualización de la información en calendario </h4>

    <button class=""btn btn-info"" id=""btn_volverCal""><i class=""fas fa-sync-alt""></i> Reestablecer calendario</button>

    <hr />
    <div id='calendar'></div>
</div>
<br />
<br />

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<FactoryX.Models.Turnos_activos_extras_view> Html { get; private set; }
    }
}
#pragma warning restore 1591
